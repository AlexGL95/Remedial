{"ast":null,"code":"import{models}from'../data/models';export var getByModel=function getByModel(model){var validPublishers=['indian'];if(!validPublishers.includes(model)){throw new Error(\"\".concat(model,\" is not a valid publisher\"));}return models.filter(function(hero){return hero.model===model;});};","map":{"version":3,"sources":["C:/Users/Alex/Documents/Repos/PWA/Remedial/src/selectors/getByModel.js"],"names":["models","getByModel","model","validPublishers","includes","Error","filter","hero"],"mappings":"AAAA,OAASA,MAAT,KAAuB,gBAAvB,CAGA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAEC,KAAF,CAAa,CAEnC,GAAMC,CAAAA,eAAe,CAAG,CAAC,QAAD,CAAxB,CACA,GAAI,CAACA,eAAe,CAACC,QAAhB,CAA0BF,KAA1B,CAAL,CAAyC,CACrC,KAAM,IAAIG,CAAAA,KAAJ,WAAeH,KAAf,8BAAN,CACH,CAED,MAAOF,CAAAA,MAAM,CAACM,MAAP,CAAe,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACL,KAAL,GAAeA,KAAnB,EAAnB,CAAP,CACH,CARM","sourcesContent":["import { models } from '../data/models';\n\n\nexport const getByModel = ( model ) => {\n\n    const validPublishers = ['indian'];\n    if( !validPublishers.includes( model ) ) {\n        throw new Error( `${ model } is not a valid publisher` );\n    }\n\n    return models.filter( hero => hero.model === model );\n}\n"]},"metadata":{},"sourceType":"module"}